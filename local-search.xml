<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>伪造DNS服务</title>
    <link href="/2022/03/26/title/"/>
    <url>/2022/03/26/title/</url>
    
    <content type="html"><![CDATA[<h5 id="大部分服务都采用身份认证的方式，限制用户对特定资源的访问和使用。实施网络欺骗后，安全人员可以通过伪造服务认证的方式，诱骗用户输入合法的身份信息，如用户名和密码。Kali-Linux提供一款伪造服务工具Responder，可以用来伪造HTTP-x2F-HTTPS、SMB、SQL-Server、RDP、FTP等多项服务。下面将介绍如何使用Responder工具伪造各种服务，以获取目标用户的身份认证信息。"><a href="#大部分服务都采用身份认证的方式，限制用户对特定资源的访问和使用。实施网络欺骗后，安全人员可以通过伪造服务认证的方式，诱骗用户输入合法的身份信息，如用户名和密码。Kali-Linux提供一款伪造服务工具Responder，可以用来伪造HTTP-x2F-HTTPS、SMB、SQL-Server、RDP、FTP等多项服务。下面将介绍如何使用Responder工具伪造各种服务，以获取目标用户的身份认证信息。" class="headerlink" title="大部分服务都采用身份认证的方式，限制用户对特定资源的访问和使用。实施网络欺骗后，安全人员可以通过伪造服务认证的方式，诱骗用户输入合法的身份信息，如用户名和密码。Kali Linux提供一款伪造服务工具Responder，可以用来伪造HTTP&#x2F;HTTPS、SMB、SQL Server、RDP、FTP等多项服务。下面将介绍如何使用Responder工具伪造各种服务，以获取目标用户的身份认证信息。"></a>大部分服务都采用身份认证的方式，限制用户对特定资源的访问和使用。实施网络欺骗后，安全人员可以通过伪造服务认证的方式，诱骗用户输入合法的身份信息，如用户名和密码。Kali Linux提供一款伪造服务工具Responder，可以用来伪造HTTP&#x2F;HTTPS、SMB、SQL Server、RDP、FTP等多项服务。下面将介绍如何使用Responder工具伪造各种服务，以获取目标用户的身份认证信息。</h5><hr><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li><p>Kali Linux默认安装了Responder工具。在使用之前，需要修改配置文件，Responder工具的配置文件为&#x2F;usr&#x2F;share&#x2F;responder&#x2F;Responder.conf。</p></li><li><p>Responder.conf文件包括三部分配置选项，分别为Responder Core、HTTP Server和HTTPS Server。下面将分别介绍每部分的配置选项。</p><p>1.Responder Core</p><p>​        Responder Core部分定义了Responder工具的基本配置，如启动的服务、挑战码、日志文件等。</p><p><img src="https://s2.loli.net/2022/03/27/8bWYq7TxB5VrLgU.png" alt="image-20220326201251404"></p><p>​        Responder默认开启了所有支持的服务，想要关闭的话，只需要设置：<br>$$<br>SMB&#x3D;OFF<br>$$<br>​        为了伪造所有服务认证，使用默认设置开启所有服务。</p><p>2.HTTP Server</p><p>​        默认配置信息如下：</p><p><img src="https://s2.loli.net/2022/03/27/kTPN3l6x7RvzJdi.png" alt="image-20220326201111699"></p></li></ul><p>​    3.HTTPS Server</p><p>​            对HTTPS服务默认配置如下：</p><p><img src="https://s2.loli.net/2022/03/27/MksabcCNGUgdvo5.png" alt="image-20220326201404884"></p><h3 id="伪造DNS服务"><a href="#伪造DNS服务" class="headerlink" title="伪造DNS服务"></a>伪造DNS服务</h3><div class="code-wrapper"><pre><code class="hljs">    ###### DNS服务主要用来实现域名解析。用户通过伪造DNS服务，则可以将目标主机请求的域名解析到一个错误的地址，如攻击主机的IP地址。这样，便于伪造基于域名方式的其他服务认证。Responder工具中，内建了DNS服务，可以用来响应A类型查询。下面将使用Responder伪造DNS服务认证，以实施DNS欺骗。伪造DNS服务认证，并启用主机指纹识别。执行命令如下所示：</code></pre></div><p>$$<br>responder -I eth0 -vf<br>$$</p><p><img src="https://s2.loli.net/2022/03/27/5AV2lqoUXrjyte8.png" alt="image-20220326202402163"></p><p><img src="https://s2.loli.net/2022/03/27/lVm7xRvrQAOUE1M.png" alt="image-20220326202641463"></p><p>如此，成功启用了Responder工具，并且开始监听信息。为了验证伪DNS服务器能够成功解析域名，我将手动修改被攻击主机DNS服务器地址，完成攻击。</p><ol><li><p>修改Linux的DNS服务器地址</p><p>找到配置文件：<br>$$<br>&#x2F;etc&#x2F;resolv.conf<br>$$<br>然后把nameserve命令修改为上面我们攻击者的IP，也就是伪DNS服务器地址即可。</p><p>（注意一下，Linux修改文件：vim命令修改文件；x是删除；i是插入；esc退出编辑；:q表示不保存；:wq表示保存修改）</p><p><img src="https://s2.loli.net/2022/03/27/SHg8saWMQTwrUl1.png" alt="image-20220326203346232"></p></li></ol><p>​        如图所示，我们已经修改完成啦！</p><p>2.修改windows的DNS服务器地址（以windows7为例）</p><p>​    <img src="https://s2.loli.net/2022/03/27/QZRiBIjvNsXYJFz.png" alt="image-20220326212856100"></p><p>点击一下确定，就改好了！</p><h3 id="下面就到了最激动人心的环节，我要开始验证能否攻击成功了！"><a href="#下面就到了最激动人心的环节，我要开始验证能否攻击成功了！" class="headerlink" title="下面就到了最激动人心的环节，我要开始验证能否攻击成功了！"></a>下面就到了最激动人心的环节，我要开始验证能否攻击成功了！</h3><p>首先是攻击Linux操作系统的主机，开启Responder服务，被攻击主机开始访问网站，同时查看监听到的信息，如下：</p><p><img src="https://s2.loli.net/2022/03/27/Pksdz51uB2UED68.png" alt="image-20220326215510115"></p><p>然后我们攻击一下windows操作系统的主机（我用的自己的kali Linux攻击自己的windows 7），查看监听信息，如下：</p><p><img src="https://s2.loli.net/2022/03/27/Q8VBh6EkXUxY3jS.png" alt="image-20220326213833765"></p><p>​        因为正好有win10虚拟机，所以我又试了一下win10的。</p><p><img src="https://s2.loli.net/2022/03/27/EpXD7WHQ84lMi3r.png" alt="image-20220326214906230"></p><p>没了，真没了，今天肚子疼，算是摸鱼了呜呜呜。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/18/hello-world/"/>
    <url>/2022/03/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
